name: TorchArrow RC Build and Test
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Use the following to trigger test on a dev PR
  pull_request:
   branches:
     - main
     # For PR created by ghstack
     - gh/*/*/base

  workflow_call:
    secrets:
      AWS_PYTORCH_UPLOADER_ACCESS_KEY_ID:
        required: true
      AWS_PYTORCH_UPLOADER_SECRET_ACCESS_KEY:
        required: true

jobs:
  linux-container:
    runs-on: ubuntu-latest
    container: prestocpp/velox-sse-velox-torcharrow:kpai-20220524
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.7
          - 3.8
          - 3.9
    steps:
      - name: Print CPU info
        run: cat /proc/cpuinfo

      - name: Check out source repository
        uses: actions/checkout@v2
        with:
            # ref: "release/0.1.0"
            submodules: recursive

      # - name: Install dependencies with APT
      #   run: |
      #     sudo apt-get update
      #     # sudo apt install -y g++ cmake ccache ninja-build checkinstall git \
      #     # libssl-dev libboost-all-dev libdouble-conversion-dev libgoogle-glog-dev \
      #     # libgflags-dev libevent-dev libre2-dev
      #     sudo apt install -y libboost-all-dev

      - name: Build the wheel
        run: |
          source /opt/conda/etc/profile.d/conda.sh
          BUILD_VERSION=0.1.0 PYTHON_VERSION=${{ matrix.python-version }} CPU_TARGET="sse" packaging/build_wheel.sh
          conda activate env${{ matrix.python-version }}
          pip install auditwheel
          auditwheel repair dist/*.whl -w fixed_dist --plat manylinux2014_x86_64

      # - name: Install and Test TorchArrow Wheel
      #   shell: bash
      #   env:
      #     PYTHON_VERSION: ${{ matrix.python-version }}
      #   run: |
      #     source packaging/manylinux/python_helper.sh
      #     pip3 install dist/torcharrow*.whl
      #     pip3 install pytest
      #     pip3 install torch
      #     # pytest -v torcharrow/test/integration
      #     python torcharrow/test/integration/test_criteo.py

      - name: Upload Wheels to Github
        uses: actions/upload-artifact@v2
        with:
          name: torcharrow-artifact
          path: dist/torcharrow*.whl

  # linux-container:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version:
  #         - 3.7
  #         - 3.8
  #         - 3.9

  #   steps:
  #     - name: Print CPU info
  #       run: cat /proc/cpuinfo

  #     - name: Setup Python environment
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Check out source repository
  #       uses: actions/checkout@v2
  #       with:
  #           # ref: "release/0.1.0"
  #           submodules: recursive

  #     # Based on https://cristianadam.eu/20200113/speeding-up-c-plus-plus-github-actions-using-ccache/
  #     - name: Prepare ccache timestamp
  #       id: ccache_cache_timestamp
  #       run: |
  #         echo "::set-output name=timestamp::$(/bin/date -u "+%Y%m%d-%H:%M:%S")"
  #       shell: bash

  #     - name: Load ccache files
  #       uses: actions/cache@v2
  #       with:
  #         path: .ccache
  #         key: ubuntu-ccache-${{ steps.ccache_cache_timestamp.outputs.timestamp }}
  #         restore-keys: |
  #             ubuntu-ccache-

  #     - name: Install dependencies with APT
  #       run: |
  #         sudo apt-get update
  #         sudo apt install -y g++ cmake ccache ninja-build checkinstall git \
  #         libssl-dev libboost-all-dev libdouble-conversion-dev libgoogle-glog-dev \
  #         libgflags-dev libevent-dev libre2-dev

  #     # Based on https://github.com/facebookincubator/velox/blob/99429407c3d524e07b32b8b19a03aa7382f819cf/.circleci/config.yml#L114-L116
  #     - name: Configure ccache
  #       run: |
  #         echo "$GITHUB_WORKSPACE"
  #         CCACHE_DIR=$GITHUB_WORKSPACE/.ccache_root ccache -sz -M 1G
  #         CCACHE_DIR=$GITHUB_WORKSPACE/.ccache ccache -sz -M 1G

  #     - name: Build and install folly and fmt
  #       # sudo doesn't preserve environment vairable; set it after sudo: https://stackoverflow.com/questions/8633461/how-to-keep-environment-variables-when-using-sudo/33183620#33183620
  #       run: |
  #         sudo CMAKE_C_COMPILER_LAUNCHER=ccache CPU_TARGET="sse" CMAKE_CXX_COMPILER_LAUNCHER=ccache CCACHE_DIR=$GITHUB_WORKSPACE/.ccache_root scripts/setup-ubuntu.sh

  #     - name: Build the wheel
  #       run: |
  #         BUILD_VERSION=0.1.0 PYTHON_VERSION=${{ matrix.python-version }} CPU_TARGET="sse" packaging/build_wheel.sh
  #         pip install auditwheel
  #         auditwheel repair dist/*.whl -w fixed_dist --plat manylinux2014_x86_64

  #     - name: Install and Test TorchArrow Wheel
  #       shell: bash
  #       env:
  #         PYTHON_VERSION: ${{ matrix.python-version }}
  #       run: |
  #         source packaging/manylinux/python_helper.sh
  #         pip3 install dist/torcharrow*.whl
  #         pip3 install pytest
  #         pip3 install torch
  #         pytest torcharrow/test/integration

  #     - name: Upload Wheels to Github
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: torcharrow-artifact
  #         path: dist/torcharrow*.whl

  # macos-container:
  #   runs-on: macos-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version:
  #         - 3.7
  #         - 3.8
  #         - 3.9
  #   steps:
  #     - name: Setup Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Check out source repository
  #       uses: actions/checkout@v2
  #       with:
  #           # ref: "release/0.1.0"
  #           submodules: recursive

  #     - name: Build the wheel
  #       run: |
  #         MACOSX_DEPLOYMENT_TARGET=10.15 CPU_TARGET="sse" ./csrc/velox/velox/scripts/setup-macos.sh
  #         pip install wheel
  #         CPU_TARGET="sse" ./packaging/build_wheel.sh
  #         pip install delocate
  #         delocate-wheel dist/*.whl -w fixed_dist

  #     - name: Install and Test TorchArrow Wheel
  #       shell: bash
  #       env:
  #         PYTHON_VERSION: ${{ matrix.python-version }}
  #       run: |
  #         pip3 install dist/torcharrow*.whl
  #         pip3 install pytest
  #         pip3 install torch
  #         pytest torcharrow/test/integration

  #     - name: Upload Wheels to Github
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: torcharrow-artifact
  #         path: dist/torcharrow*.whl
